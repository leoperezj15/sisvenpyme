<?php
                
/**
 * @author		Leonardo Perez Justiniano
 * @company 	Blaufu�
 * @copyright 	2018
 * @version     1.0
 */

require_once "data/db.inc";
require_once "data/Usuario.inc";
require_once "data/Rol.inc";
                     
class RN_Usuario extends DataBase
{
    function __construct()
    {
        $this->Open();
    }
    
    /** 
     * @abstract Funci�n para obtener la lista de usuario(s) 
     * @return Lista de Structure_Usuario
     */
    function GetList()
    {
        $sql = "Select 
					t1.idUsuario as t1_idUsuario,
					t1.hash as t1_hash,
					t1.username as t1_username,
					t1.password as t1_password,
					t1.alias as t1_alias,
					t1.email as t1_email,
					t1.idRol as t1_idRol,
					t1.estado as t1_estado,
					t2.idRol as t2_idRol,
					t2.hash as t2_hash,
					t2.nombre as t2_nombre,
					t2.estado as t2_estado
				from usuario as t1
				inner join rol as t2
					 on t1.idRol = t2.idRol
				where t1.estado = 'Activo'";
        $res = $this->Execute($sql);
        
        $list = array();
        if ($this->ContainsData($res)){
            $data = $this->DataListStructure($res);
            foreach($data as $item)
            {
                $osUsuario = new Structure_Usuario;

 				$osUsuario->idUsuario->SetValue($item["t1_idUsuario"]);
 				$osUsuario->hash->SetValue($item["t1_hash"]);
 				$osUsuario->username->SetValue($item["t1_username"]);
 				$osUsuario->password->SetValue($item["t1_password"]);
 				$osUsuario->alias->SetValue($item["t1_alias"]);
 				$osUsuario->email->SetValue($item["t1_email"]);
 				$osUsuario->idRol->SetValue($item["t1_idRol"]);
 				$osUsuario->estado->SetValue($item["t1_estado"]);

					$osRol = new Structure_Rol;

 					$osRol->idRol->SetValue($item["t2_idRol"]);
 					$osRol->hash->SetValue($item["t2_hash"]);
 					$osRol->nombre->SetValue($item["t2_nombre"]);
 					$osRol->estado->SetValue($item["t2_estado"]);


				$osUsuario->Rol = $osRol;

 				$list[] = $osUsuario;                
            }            
        }
        
        return $list;
    }
    
    /** 
     * @abstract Funci�n para obtener los Datos de usuario(s)
     * @param string hash
     * @return Structure_Usuario
     */
    function GetData($_hash)
    {
        $sql = "Select 
					t1.idUsuario as t1_idUsuario,
					t1.hash as t1_hash,
					t1.username as t1_username,
					t1.password as t1_password,
					t1.alias as t1_alias,
					t1.email as t1_email,
					t1.idRol as t1_idRol,
					t1.estado as t1_estado,
					t1.idEmpleado as t1_idEmpleado,
					t2.idRol as t2_idRol,
					t2.hash as t2_hash,
					t2.nombre as t2_nombre,
					t2.estado as t2_estado
				from usuario as t1
				inner join rol as t2
					 on t1.idRol = t2.idRol
				where t1.hash = '". $_hash . "'";
        $res = $this->Execute($sql);
        
        $osUsuario = new Structure_Usuario;
        
        if ($this->ContainsData($res))
        {
            $data = $this->DataListStructure($res);            
            
            foreach($data as $item)
            {
 				$osUsuario->idUsuario->SetValue($item["t1_idUsuario"]);
 				$osUsuario->hash->SetValue($item["t1_hash"]);
 				$osUsuario->username->SetValue($item["t1_username"]);
 				$osUsuario->password->SetValue($item["t1_password"]);
 				$osUsuario->alias->SetValue($item["t1_alias"]);
 				$osUsuario->email->SetValue($item["t1_email"]);
 				$osUsuario->idRol->SetValue($item["t1_idRol"]);
				$osUsuario->estado->SetValue($item["t1_estado"]);
				$osUsuario->idEmpleado->SetValue($item["t1_idEmpleado"]);

					$osRol = new Structure_Rol;

 					$osRol->idRol->SetValue($item["t2_idRol"]);
 					$osRol->hash->SetValue($item["t2_hash"]);
 					$osRol->nombre->SetValue($item["t2_nombre"]);
 					$osRol->estado->SetValue($item["t2_estado"]);


				$osUsuario->Rol = $osRol;
            }            
        }
        
        return $osUsuario;
    }
    
    /** 
     * @abstract Funci�n para guardar usuario
     * @param Structure_Usuario osUsuario
     * @return bool
     */
    function Save($_osUsuario)
    {
        $sql = "Insert into usuario values (
				" . $_osUsuario->idUsuario->GetValue() . ",
				'" . $_osUsuario->hash->GetValue() . "',
				'" . $_osUsuario->username->GetValue() . "',
				AES_ENCRYPT('" . $_osUsuario->password->GetValue() . "', '" . SecurityKey . "'),
				'" . $_osUsuario->alias->GetValue() . "',
				'" . $_osUsuario->email->GetValue() . "',
				" . $_osUsuario->idRol->GetValue() . ",
				'" . $_osUsuario->estado->GetValue() . "')";
        
        $res = $this->Execute($sql);

		$id   = $this->GetLastIdAutoGenerated();
		$hash = sha1($id);
		$sql2 = "Update usuario set hash = '". $hash ."' where idUsuario = " . $id;
		$res2 = $this->Execute($sql2);
        
        $r = ($res and $res2) ? true : false;
		return $r;
    }
    
    /** 
     * @abstract Funci�n para actualizar usuario
     * @param Structure_Usuario osUsuario
     * @return bool
     */
    function Update($_osUsuario)
    {
        $sql = "Update usuario set 
					username = '" . $_osUsuario->username->GetValue() . "',
					password = AES_ENCRYPT('" . $_osUsuario->password->GetValue() . "', '" . SecurityKey . "'),
					alias = '" . $_osUsuario->alias->GetValue() . "',
					email = '" . $_osUsuario->email->GetValue() . "',
					idRol = " . $_osUsuario->idRol->GetValue() . ",
					estado = '" . $_osUsuario->estado->GetValue() . "'
				where hash = '" . $_osUsuario->hash->GetValue() . "'";
        $res = $this->Execute($sql);
        
        return $res;
    }
    
    /** 
     * @abstract Funci�n para eliminar usuario
     * @param string hash
     * @return bool
     */
    function Delete($_hash)
    {
        $sql = "Update usuario set estado = 'Inactivo' where hash = '" . $_hash . "'";
        $res = $this->Execute($sql);
        
        return $res;
    }

	/**
	 * @abstract Funci�n para autenticar usuarios
	 * @param string user, string pswd
	 * @return Structure_Usuario
	 */
	function Verify($_user, $_pswd)
	{
		$sql = "Select * from usuario where username = '". base64_decode($_user) ."' and password = AES_ENCRYPT('" . base64_decode($_pswd) . "', '" . SecurityKey . "')";
		$res = $this->Execute($sql);

		$osUsuario = null;

		if ($this->ContainsData($res)){

			$row = $this->FetchArray($res);
			$hash = $row["hash"];
			$osUsuario = $this->GetData($hash);

		}

		return $osUsuario;
	}
}
                
?>